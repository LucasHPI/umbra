name: Common Infrastructure deployment
on:
  push:
    branches:
      - devl
    paths:
      - common-infra/**
env:
  env_name: devl
jobs:
  Setup:
    runs-on:
      - ubuntu-latest
    outputs:
      folder-matrix: ${{ steps.set-folder-matrix.outputs.matrix }}
      env_name: ${{ env.env_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: List folders
        id: set-folder-matrix
        working-directory: common-infra
        run: >
          arr="["; for i in $(ls -d *); do arr="$arr\"$i\","; done; arr="${arr::-1}]"

          echo $arr

          echo "::set-output name=matrix::$arr"
  Terraform:
    runs-on: ubuntu-latest
    needs:
      - Setup
    env:
      TF_VAR_environment_name: ${{ needs.Setup.outputs.env_name }}
    strategy:
      matrix:
        commonInfra: ${{ fromJson(needs.setup.outputs.folder-matrix) }}
    defaults:
      run:
        working-directory: commonInfra/${{ matrix.commonInfra }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Assume IAM role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: us-east-1
          role-duration-seconds: 1200
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0
      - name: Terraform Init
        run: terraform init -backend-config "bucket=parallax-umbra-terraform-state-${{
          env.env_name }}" -backend-config
          "dynamodb_table=parallax-umbra-terraform-lock-${{ env.env_name }}"
      - name: Terraform Plan
        run: terraform plan -input=false -out=./tfplan && \
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false ./tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.assume-role.outputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.assume-role.outputs.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ steps.assume-role.outputs.AWS_SESSION_TOKEN }}
